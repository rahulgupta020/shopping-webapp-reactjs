{"ast":null,"code":"export const CartReducer = (state, action) => {\n  const {\n    shoppingCart,\n    totalPrice,\n    qty\n  } = state;\n  let product;\n  let index;\n  let updatedPrice;\n  let updatedQty;\n  let updatedAvl;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const check = shoppingCart.find(product => product.id === action.id);\n\n      if (check) {\n        return state;\n      } else {\n        product = action.product;\n        product['qty'] = 1;\n        updatedQty = qty + 1;\n        updatedPrice = totalPrice + product.price;\n        return {\n          shoppingCart: [product, ...shoppingCart],\n          totalPrice: updatedPrice,\n          qty: updatedQty\n        };\n      }\n\n      break;\n\n    case 'BUY_NOW':\n      product = action.product;\n      product['qty'] = 1;\n      updatedQty = qty + 1;\n      updatedPrice = totalPrice + product.price;\n      return {\n        shoppingCart: [product, ...shoppingCart],\n        totalPrice: updatedPrice,\n        qty: updatedQty\n      };\n      break;\n\n    case 'INC':\n      product = action.cart;\n      product.qty = product.qty + 1;\n      updatedPrice = totalPrice + product.price;\n      updatedQty = qty + 1;\n      index = shoppingCart.findIndex(cart => cart.id === action.id);\n      shoppingCart[index] = product;\n      return {\n        shoppingCart: [...shoppingCart],\n        totalPrice: updatedPrice,\n        qty: updatedQty\n      };\n      break;\n\n    case 'DEC':\n      product = action.cart;\n\n      if (product.qty > 1) {\n        product.qty = product.qty - 1;\n        updatedPrice = totalPrice - product.price;\n        updatedQty = qty - 1;\n        index = shoppingCart.findIndex(cart => cart.id === action.id);\n        shoppingCart[index] = product;\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice: updatedPrice,\n          qty: updatedQty\n        };\n      } else {\n        return state;\n      }\n\n      break;\n\n    case 'DELETE':\n      const filtered = shoppingCart.filter(product => product.id !== action.id);\n      product = action.cart;\n      updatedQty = qty - product.qty;\n      updatedPrice = totalPrice - product.price * product.qty;\n      return {\n        shoppingCart: [...filtered],\n        totalPrice: updatedPrice,\n        qty: updatedQty\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/rahul/Documents/practice/project/4_shopping-web/shopping-web/src/Components/CartReducer.js"],"names":["CartReducer","state","action","shoppingCart","totalPrice","qty","product","index","updatedPrice","updatedQty","updatedAvl","type","check","find","id","price","cart","findIndex","filtered","filter"],"mappings":"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","sourcesContent":["export const CartReducer=(state,action)=>{\n   const {shoppingCart,totalPrice,qty}=state;\n   let product;\n   let index;\n   let updatedPrice;\n   let updatedQty;\n   let updatedAvl;\n    switch(action.type){\n        case 'ADD_TO_CART':\n            const check =shoppingCart.find(product=>product.id=== action.id);\n            if(check){\n                return state;\n            }else{\n                product=action.product;\n                product['qty']=1;\n                updatedQty=qty+1;\n                updatedPrice=totalPrice + product.price;\n                return {shoppingCart:[product,...shoppingCart],totalPrice:updatedPrice,qty:updatedQty}\n            }\n            break;\n\n            case 'BUY_NOW':\n                    product=action.product;\n                    product['qty']=1;\n                    updatedQty=qty+1;\n                    updatedPrice=totalPrice + product.price;\n                    return {shoppingCart:[product,...shoppingCart],totalPrice:updatedPrice,qty:updatedQty}\n                \n                break;\n\n            case 'INC':\n                product=action.cart;\n                product.qty=product.qty +1;\n                updatedPrice=totalPrice + product.price;\n                updatedQty=qty + 1;\n                index=shoppingCart.findIndex(cart => cart.id === action.id);\n                shoppingCart[index]=product;\n                return {shoppingCart:[...shoppingCart],totalPrice:updatedPrice,qty:updatedQty}\n                \n            break;\n\n            case 'DEC':\n                product=action.cart;\n                if(product.qty>1){\n                product.qty=product.qty - 1;\n                updatedPrice=totalPrice - product.price;\n                updatedQty=qty - 1;\n                index=shoppingCart.findIndex(cart => cart.id === action.id);\n                shoppingCart[index]=product;\n                return {shoppingCart:[...shoppingCart],totalPrice:updatedPrice,qty:updatedQty}\n                }else{\n                    return state;\n                }\n            break;\n\n            case 'DELETE':\n                const filtered=shoppingCart.filter(product=>product.id !== action.id)\n                product=action.cart;\n                updatedQty=qty - product.qty;\n                updatedPrice=totalPrice - product.price * product.qty;\n                return {shoppingCart:[...filtered],totalPrice:updatedPrice,qty:updatedQty}\n            break;\n                default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}